library(tidyverse)
library(skimr)

getmode = function(vec) {
  uniq = unique(vec)
  uniq[which.max(tabulate(match(vec, uniq)))]
}

AirTrain = read.csv("/Users/jungwonwoo/Desktop/program_file/AirBnBPrice/train.csv")
AirTest = read.csv("/Users/jungwonwoo/Desktop/program_file/AirBnBPrice/test.csv")
submission = read.csv("/Users/jungwonwoo/Desktop/program_file/AirBnBPrice/sample_submission.csv")

neighbourhood_summary = AirTrain %>%
  select(host_id, neighbourhood, room_type, price, number_of_reviews, availability_365) %>%
  group_by(neighbourhood) %>%
  summarise(meanPrice = mean(price),
            meanReviewNum = mean(number_of_reviews),
            meanAvailability = mean(availability_365),
            modeRoomType = getmode(room_type),
            n = n()) %>%
  arrange(desc(n)) %>%
  filter(n >= 200) %>%
  as.data.frame()

neighbourhood_summary 
  
AirTrain %>%
  ggplot(aes(price, fill = neighbourhood_group)) +
  geom_histogram(position = "identity", alpha = 0.5, bins = 20) +
  scale_x_log10(labels = scales::dollar_format()) +
  labs(fill = NULL, x = "price per night")

AirTrain %>%
  ggplot(aes(longitude, latitude, color = log(price))) +
  geom_point(alpha = 0.2) +
  scale_color_viridis_c()

AirTrain %>%
  ggplot(aes(longitude, latitude, z = log(price))) +
  stat_summary_hex(alpha = 0.8, bins = 70) +
  scale_fill_viridis_c() +
  labs(fill = "Mean price (log)")



library(tidymodels)

set.seed(123)
nyc_split <- train_raw %>%
  mutate(price = log(price + 1)) %>%
  initial_split(strata = price)
nyc_train <- training(nyc_split)
nyc_test <- testing(nyc_split)

set.seed(234)
nyc_folds <- vfold_cv(nyc_train, v = 5, strata = price)
nyc_folds
